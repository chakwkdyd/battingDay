<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<beans:bean id="loggerInterceptor" class="com.bet.project.common.intercepter.LoggerInterceptor"/>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*"/>
			<beans:ref bean="loggerInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!--  Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
    </beans:bean>
	 <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		  <beans:property name="definitions">
			   <beans:list>
			    	<beans:value>/WEB-INF/tiles-defs/templates.xml</beans:value>
			   </beans:list>
		  </beans:property>
	 </beans:bean>
		
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 이미파일 추가 (서블릿이 아닌 리소스) -->	
	<resources mapping="/images/**" location="/WEB-INF/views/images" />
	

	<!-- 파일업로드에 필요한 bean -->	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<!-- 파일업로드 최대 용량(byte) -->
	 	<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	
	
	<!-- 업로드 패스 설정 --> 
	<beans:bean id="uploadPath" class="java.lang.String" >
	 	<beans:constructor-arg value="C:/upload" />
	</beans:bean>




	<!--[1] -->
	<!-- <context:component-scan base-package="com"/> -->

	<!--[3] -->
	<beans:bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	
	<!--[4] -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
      <beans:property name="order" value="0"/>
    </beans:bean>	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />


	
	
	<!-- 이메일 관련 -->
	<!-- Gmail -->
	  <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <beans:property name="host" value="smtp.gmail.com" />
	    <beans:property name="port" value="587" />
	    <beans:property name="username" value="pdb3933@gmail.com" />
	    <beans:property name="password" value="ekdnlt12" />
	    <beans:property name="javaMailProperties">
	    <beans:props>
	      <beans:prop key="mail.smtp.auth">true</beans:prop>
	      <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
	    </beans:props>
	    </beans:property>
	  </beans:bean>
		
	

	  <!-- naver mail -->
	 <!--  <beans:bean class="org.springframework.mail.javamail.JavaMailSenderImpl"
		    p:host="smtp.naver.com"
		    p:port="465"
		    p:username=""
		    p:password="">
    	<property name="javaMailProperties">
	    <props>
		      <prop key="mail.smtp.starttls.enable">true</prop>
		      <prop key="mail.smtp.auth">true</prop>
		      <prop key="mail.smtps.ssl.checkserveridentity">true</prop>
		      <prop key="mail.smtps.ssl.trust">*</prop>
		      <prop key="mail.debug">true</prop>
		      <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
	    </props>
	    </property>
	  </beans:bean> -->
	
	 
	<mvc:default-servlet-handler />
	
	<context:component-scan base-package="com.bet.project" />
</beans:beans>
